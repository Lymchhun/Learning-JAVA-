package com.mycompany.basicjava;
import java.util.Arrays;

public class ArraysInJava {
    public static void main(String args[]) {
        //In order to test with the sample code below, you can just eliminate Multi-line comments for each sessions
        /*
        // Single Dimension arrays
        int[] numbers= {1, 2, 3, 4, 5};
        for (int i = 0; i < numbers.length; i++) 
        {
        System.out.println("Element at index " + i + ": " + numbers[i]);
        }
        */
        
        /*
        //2D arrays
        int[][] matrix = {{1, 2, 3},{4, 5, 6},{7, 8, 9}};
        for (int i = 0; i < matrix.length; i++) 
        {
            for (int j = 0; j < matrix[i].length; j++) 
            {
                System.out.print("Element at [" + i + "][" + j + "]: " + matrix[i][j] + " ");
            }
            System.out.println();
        }
        */
        
        /*
        //3D arrays
        int[][][] cube = {{{1, 2, 3},{4, 5, 6}},{{7, 8, 9},{10, 11, 12}},{{13, 14, 15},{16, 17, 18}}};
        for (int i = 0; i < cube.length; i++) 
        {
            System.out.println("Layer " + (i + 1) + ":");
            for (int j = 0; j < cube[i].length; j++) 
            {
                for (int k = 0; k < cube[i][j].length; k++) 
                {
                    System.out.print("Element at [" + i + "][" + j + "][" + k + "]: " + cube[i][j][k] + " ");
                }
                System.out.println();
            }
            System.out.println();
        }
        */
        
        /*
        //accessing and modifying 1D arrays
        int firstElement = numbers[0]; // Accessing the first element
        int thirdElement = numbers[2]; // Accessing the third element
        System.out.println("first element is: " + firstElement);
        System.out.println("third element is: " + thirdElement);
        */
        
        /*
        //accessing and modifying 2D arrays
        int firstElement = matrix[0][0]; // Accessing the first element
        int middleElement = matrix[1][1]; // Accessing the middle element
        System.out.println("first element is: " + firstElement);
        System.out.println("middle element is: " + middleElement);
        */
        
        /*
        //accessing and modifying 3D arrays
        int firstElement = cube[0][0][0]; // Accessing the first element
        int middleElement = cube[1][1][1]; // Accessing a middle element
        System.out.println("first element is: " + firstElement);
        System.out.println("middle element is: " + middleElement);        
        */
        
        /*
        //common operations in java
        // 1. Assignment Operator (=) and Index Operator ([])
        int[] numbers = {1, 2, 3, 4, 5}; // Initializing an array
        numbers[0] = 10; // Modifying the first element
        System.out.println("Modified array: " + Arrays.toString(numbers));

        // 2. Array Length Operator
        int length = numbers.length;
        System.out.println("Length of the array: " + length);

        // 3. Accessing elements using Index Operator
        int firstElement = numbers[0];
        int thirdElement = numbers[2];
        System.out.println("First element: " + firstElement);
        System.out.println("Third element: " + thirdElement);

        // 4. Enhanced For Loop
        System.out.print("Elements of the array: ");
        for (int num : numbers) {
            System.out.print(num + " ");
        }
        System.out.println();

        // 5. Arrays Class Methods

        // a. Arrays.toString()
        System.out.println("Array as string: " + Arrays.toString(numbers));

        // b. Arrays.sort()
        int[] unsortedNumbers = {5, 3, 1, 4, 2};
        Arrays.sort(unsortedNumbers);
        System.out.println("Sorted array: " + Arrays.toString(unsortedNumbers));

        // c. Arrays.fill()
        int[] filledArray = new int[5];
        Arrays.fill(filledArray, 10);
        System.out.println("Filled array: " + Arrays.toString(filledArray));

        // d. Arrays.equals()
        int[] numbers1 = {1, 2, 3, 4, 5};
        int[] numbers2 = {1, 2, 3, 4, 5};
        System.out.println("Arrays.equals(numbers1, numbers2): " + Arrays.equals(numbers1, numbers2));

        // e. Arrays.copyOf()
        int[] copy = Arrays.copyOf(numbers, numbers.length);
        System.out.println("Copy of the array: " + Arrays.toString(copy));

        // f. Arrays.binarySearch()
        int[] sortedNumbers = {1, 2, 3, 4, 5};
        int index = Arrays.binarySearch(sortedNumbers, 3);
        System.out.println("Index of element 3: " + index);

        // 6. Comparison Operators (==, !=)
        int[] numbers3 = numbers1;
        System.out.println("numbers1 == numbers2: " + (numbers1 == numbers2)); // false
        System.out.println("numbers1 == numbers3: " + (numbers1 == numbers3)); // true
        */
    }
}

